# Generated by Django 5.2.4 on 2025-09-29 11:53

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='NewsArticle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('date', models.DateField()),
                ('summary', models.TextField(blank=True, null=True)),
                ('content', models.TextField()),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('featured', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, null=True, upload_to='news/')),
                ('status', models.CharField(choices=[('breaking', 'Breaking'), ('update', 'Update'), ('announcement', 'Announcement')], default='update', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_time', models.DateTimeField()),
                ('status', models.CharField(choices=[('upcoming', 'Upcoming'), ('live', 'Live'), ('completed', 'Completed')], default='upcoming', max_length=20)),
                ('stage', models.CharField(blank=True, max_length=100)),
                ('team1_score', models.PositiveIntegerField(blank=True, null=True)),
                ('team2_score', models.PositiveIntegerField(blank=True, null=True)),
                ('viewer_count', models.PositiveIntegerField(default=0)),
                ('viewer_label', models.CharField(blank=True, default='', max_length=20)),
                ('youtube_live_url', models.URLField(blank=True)),
                ('youtube_recap_url', models.URLField(blank=True)),
                ('current_round', models.PositiveIntegerField(blank=True, null=True)),
                ('total_rounds', models.PositiveIntegerField(blank=True, null=True)),
                ('live_started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('points_team1', models.IntegerField(default=0)),
                ('points_team2', models.IntegerField(default=0)),
                ('game', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.game')),
            ],
        ),
        migrations.CreateModel(
            name='MatchReminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('notify_minutes_before', models.PositiveIntegerField(default=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sent', models.BooleanField(default=False)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_reminders', to='core.match')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('notify_minutes_before', models.PositiveIntegerField(default=30)),
                ('sent', models.BooleanField(default=False)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='core.match')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('region', models.CharField(blank=True, max_length=50, null=True)),
                ('founded', models.PositiveIntegerField(blank=True, null=True)),
                ('banner', models.ImageField(blank=True, null=True, upload_to='team_banners/')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='team_logos/')),
                ('status_indicator', models.CharField(blank=True, choices=[('live', 'Live'), ('upcoming', 'Upcoming'), ('', 'None')], default='', max_length=10)),
                ('rank', models.PositiveIntegerField(blank=True, null=True)),
                ('tag', models.CharField(blank=True, max_length=10, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('game', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='core.game')),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(default='no-email@example.com', max_length=254)),
                ('discord', models.CharField(blank=True, max_length=100)),
                ('is_substitute', models.BooleanField(default=False)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='player_avatars/')),
                ('role', models.CharField(blank=True, max_length=50, null=True)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='players', to='core.team')),
            ],
        ),
        migrations.AddField(
            model_name='match',
            name='team1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches_as_team1', to='core.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='team2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches_as_team2', to='core.team'),
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('registration', 'Registration Open'), ('live', 'Live'), ('completed', 'Completed'), ('upcoming', 'Upcoming')], max_length=20)),
                ('prize_pool', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('teams', models.PositiveIntegerField(blank=True, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('location', models.CharField(blank=True, max_length=255)),
                ('registration_deadline', models.DateField(blank=True, null=True)),
                ('format', models.CharField(blank=True, max_length=255)),
                ('image', models.ImageField(blank=True, null=True, upload_to='tournaments/')),
                ('featured', models.BooleanField(default=False)),
                ('timezone', models.CharField(default='Asia/Kolkata', help_text="Timezone name (IANA format, e.g., 'Asia/Kolkata', 'America/New_York')", max_length=50, null=True)),
                ('game', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.game')),
            ],
        ),
        migrations.AddField(
            model_name='match',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='core.tournament'),
        ),
        migrations.CreateModel(
            name='TournamentParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manager_name', models.CharField(max_length=100)),
                ('manager_email', models.EmailField(max_length=254)),
                ('manager_phone', models.CharField(blank=True, max_length=20)),
                ('registered_at', models.DateTimeField(auto_now_add=True)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournament_entries', to='core.team')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='core.tournament')),
            ],
            options={
                'unique_together': {('tournament', 'team')},
            },
        ),
    ]
